<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.rogerli.system.login.dao.LoginMapper">
    <!--<cache eviction="FIFO" type="com.github.rogerli.framework.cache.RedisMybatisCache" size="1000" readOnly="true"/>-->
    <resultMap id="BaseResultMap" type="com.github.rogerli.system.login.entity.Login">
        <id column="ID" property="id" jdbcType="VARCHAR"/>
        <result column="USER_NAME" property="userName" jdbcType="VARCHAR"/>
        <result column="PASSWORD" property="password" jdbcType="VARCHAR"/>
        <result column="SALT" property="salt" jdbcType="VARCHAR"/>
        <result column="LOCKED" property="locked" jdbcType="INTEGER"/>
        <result column="USER_ID" property="userId" jdbcType="VARCHAR"/>
        <result column="ORGAN_ID" property="organId" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="RoleResultMap" type="com.github.rogerli.system.login.model.LoginRole" extends="BaseResultMap">
        <collection property="roleList" ofType="com.github.rogerli.system.role.entity.Role">
            <id column="RID" property="id" jdbcType="VARCHAR"/>
            <result column="RROLE" property="role" jdbcType="VARCHAR"/>
            <result column="RROLE_NAME" property="roleName" jdbcType="VARCHAR"/>
            <result column="RDESCRIPTIONS" property="descriptions" jdbcType="VARCHAR"/>
            <result column="RAVAILABLE" property="available" jdbcType="INTEGER"/>
            <result column="RSORT" property="sort" jdbcType="INTEGER"/>
            <result column="RORGAN_ID" property="organId" jdbcType="VARCHAR"/>
            <result column="RIS_ADMIN" property="isAdmin" jdbcType="INTEGER"/>
        </collection>
    </resultMap>
    <sql id="Base_Column_List">
    ID, USER_NAME, PASSWORD, SALT, LOCKED, USER_ID, ORGAN_ID
  </sql>
    <sql id="Login_Column_List">
        lg.ID, lg.USER_NAME, lg.PASSWORD, lg.SALT, lg.LOCKED, lg.USER_ID, lg.ORGAN_ID
    </sql>
    <select id="findByKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from r_sys_login
        where ID = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByKey" parameterType="java.lang.String">
    delete from r_sys_login
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="com.github.rogerli.system.login.entity.Login">
        <selectKey keyProperty="id" resultType="String" order="BEFORE">
            select replace(uuid(),'-','') from dual
        </selectKey>
        insert into r_sys_login (ID, USER_NAME, PASSWORD,
          SALT, LOCKED, USER_ID, ORGAN_ID
          )
        values (#{id,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
          #{salt,jdbcType=VARCHAR}, #{locked,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{organId,jdbcType=VARCHAR}
          )
  </insert>
    <insert id="insertSelective" parameterType="com.github.rogerli.system.login.entity.Login">
        <selectKey keyProperty="id" resultType="String" order="BEFORE">
            select replace(uuid(),'-','') from dual
        </selectKey>
        insert into r_sys_login
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                ID,
            </if>
            <if test="userName != null">
                USER_NAME,
            </if>
            <if test="password != null">
                PASSWORD,
            </if>
            <if test="salt != null">
                SALT,
            </if>
            <if test="locked != null">
                LOCKED,
            </if>
            <if test="userId != null">
                USER_ID,
            </if>
            <if test="organId != null">
                ORGAN_ID,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                #{salt,jdbcType=VARCHAR},
            </if>
            <if test="locked != null">
                #{locked,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="organId != null">
                #{organId,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByKeySelective" parameterType="com.github.rogerli.system.login.entity.Login">
        update r_sys_login
        <set>
            <if test="userName != null">
                USER_NAME = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                PASSWORD = #{password,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                SALT = #{salt,jdbcType=VARCHAR},
            </if>
            <if test="locked != null">
                LOCKED = #{locked,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                USER_ID = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="organId != null">
                ORGAN_ID = #{organId,jdbcType=VARCHAR},
            </if>
        </set>
        where ID = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByKey" parameterType="com.github.rogerli.system.login.entity.Login">
        update r_sys_login
        set USER_NAME = #{userName,jdbcType=VARCHAR},
          PASSWORD = #{password,jdbcType=VARCHAR},
          SALT = #{salt,jdbcType=VARCHAR},
          LOCKED = #{locked,jdbcType=INTEGER},
          USER_ID = #{userId,jdbcType=VARCHAR},
          ORGAN_ID = #{organId,jdbcType=VARCHAR}
        where ID = #{id,jdbcType=VARCHAR}
  </update>
    <select id="findList" resultMap="BaseResultMap" parameterType="com.github.rogerli.system.login.entity.Login">
        select
        <include refid="Base_Column_List"/>
        from r_sys_login
        <trim prefix="where" prefixOverrides="and|or">
            <if test="userName != null">
                and USER_NAME = #{userName,jdbcType=VARCHAR}
            </if>
            <if test="locked != null">
                and LOCKED = #{locked,jdbcType=INTEGER}
            </if>
            <if test="organId != null">
                and ORGAN_ID = #{organId,jdbcType=VARCHAR}
            </if>
        </trim>
    </select>
    <select id="findByUsername" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from r_sys_login
        where USER_NAME = #{userName,jdbcType=VARCHAR}
    </select>
    <select id="findRoleByUsername" resultMap="RoleResultMap" parameterType="java.lang.String">
        select
        <include refid="Login_Column_List"/>,
        sr.ID RID, sr.ROLE RROLE, sr.ROLE_NAME RROLE_NAME, sr.DESCRIPTIONS RDESCRIPTIONS,
        sr.AVAILABLE RAVAILABLE, sr.SORT RSORT, sr.ORGAN_ID RORGAN_ID, sr.IS_ADMIN RIS_ADMIN
        from r_sys_login lg
        inner join r_sys_login_role lr
        on lg.ID = lr.LOGIN_ID
        and lg.USER_NAME = lr.USER_NAME
        inner join r_sys_role sr
        on lr.ROLE_ID = sr.ID
        where lg.USER_NAME = #{userName,jdbcType=VARCHAR}
    </select>
    <select id="findRoleList" resultMap="com.github.rogerli.system.role.dao.RoleMapper.BaseResultMap"
            parameterType="com.github.rogerli.system.login.entity.Login">
        select
        <include refid="com.github.rogerli.system.role.dao.RoleMapper.Base_Column_List"/>
        from r_sys_role
        <trim prefix="where" prefixOverrides="and|or">
            ID in (select ur.ROLE_ID from r_sys_login_role ur where ur.LOGIN_ID = #{id,jdbcType=VARCHAR})
        </trim>
    </select>
    <select id="findUserPurview" resultMap="com.github.rogerli.system.purview.dao.PurviewMapper.BaseResultMap"
            parameterType="com.github.rogerli.system.login.entity.Login">
        select DISTINCT
        <include refid="com.github.rogerli.system.purview.dao.PurviewMapper.Base_Column_List"/>
        from r_sys_purview
        <trim prefix="where" prefixOverrides="and|or">
            ID in (select rp.PURVIEW_ID from r_sys_role_purview rp, r_sys_login_role ur where rp.ROLE_ID = ur.ROLE_ID and ur.LOGIN_ID = #{id,jdbcType=VARCHAR})
        </trim>
    </select>
    <select id="findUserRole" resultMap="RoleResultMap"
            parameterType="com.github.rogerli.system.user.entity.User">
        select su.ID, su.FULL_NAME, su.SEX, su.AGE, su.DUTY, su.EMAIL, su.PHONE, su.MOBILE, su.SORT, su.USER_CODE, su.AVAILABLE,
        sr.ID RID, sr.ROLE RROLE, sr.ROLE_NAME RROLE_NAME, sr.DESCRIPTIONS RDESCRIPTIONS, sr.AVAILABLE RAVAILABLE, sr.SORT RSORT, sr.ORGAN_ID RORGAN_ID, sr.IS_ADMIN RIS_ADMIN
        from r_sys_user su
        left join r_sys_login_role ur
        on su.ID = ur.USER_ID
        left join r_sys_role sr
        on ur.ROLE_ID = sr.ID
        where su.ID = #{id,jdbcType=VARCHAR}
    </select>
</mapper>