<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.rogerli.system.uploadfile.dao.UploadFileMapper">
    <resultMap id="BaseResultMap" type="com.github.rogerli.system.uploadfile.entity.UploadFile">
        <result column="id" jdbcType="VARCHAR" property="id"/>
        <result column="item_id" jdbcType="VARCHAR" property="itemId"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="item_type" jdbcType="VARCHAR" property="itemType"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="file_path" jdbcType="VARCHAR" property="filePath"/>
        <result column="save_name" jdbcType="VARCHAR" property="saveName"/>
        <result column="origin_name" jdbcType="VARCHAR" property="originName"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>
    <sql id="Base_Column_List">
    id,item_id,user_id,item_type,title,file_path,save_name,origin_name,create_time
    </sql>
    <select id="findByKey" parameterType="String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from r_upload_file
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByKey" parameterType="String">
        delete from r_upload_file
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.github.rogerli.system.uploadfile.entity.UploadFile">
        <selectKey keyProperty="id" resultType="String" order="BEFORE">
            select replace(uuid(),'-','') from dual
        </selectKey>
        insert into r_upload_file(id,item_id,user_id,item_type,title,file_path,save_name,origin_name,create_time)
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
        #{id,jdbcType=VARCHAR},
        #{itemId,jdbcType=VARCHAR},
        #{userId,jdbcType=VARCHAR},
        #{itemType,jdbcType=VARCHAR},
        #{title,jdbcType=VARCHAR},
        #{filePath,jdbcType=VARCHAR},
        #{saveName,jdbcType=VARCHAR},
        #{originName,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP},
        </trim>
    </insert>
    <insert id="insertSelective" parameterType="com.github.rogerli.system.uploadfile.entity.UploadFile">
        <selectKey keyProperty="id" resultType="String" order="BEFORE">
            select replace(uuid(),'-','') from dual
        </selectKey>
        insert into r_upload_file
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
            id,
            </if>
            <if test="itemId != null">
            item_id,
            </if>
            <if test="userId != null">
            user_id,
            </if>
            <if test="itemType != null">
            item_type,
            </if>
            <if test="title != null">
            title,
            </if>
            <if test="filePath != null">
            file_path,
            </if>
            <if test="saveName != null">
            save_name,
            </if>
            <if test="originName != null">
            origin_name,
            </if>
            <if test="createTime != null">
            create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
            #{id,jdbcType=VARCHAR},
            </if>
            <if test="itemId != null">
            #{itemId,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
            #{userId,jdbcType=VARCHAR},
            </if>
            <if test="itemType != null">
            #{itemType,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
            #{title,jdbcType=VARCHAR},
            </if>
            <if test="filePath != null">
            #{filePath,jdbcType=VARCHAR},
            </if>
            <if test="saveName != null">
            #{saveName,jdbcType=VARCHAR},
            </if>
            <if test="originName != null">
            #{originName,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
            #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByKeySelective" parameterType="com.github.rogerli.system.uploadfile.entity.UploadFile">
        update r_upload_file
        <trim prefix="set" prefixOverrides=",">
                <if test="itemId != null">
                    ,item_id = #{itemId,jdbcType=VARCHAR}
                </if>
                <if test="userId != null">
                    ,user_id = #{userId,jdbcType=VARCHAR}
                </if>
                <if test="itemType != null">
                    ,item_type = #{itemType,jdbcType=VARCHAR}
                </if>
                <if test="title != null">
                    ,title = #{title,jdbcType=VARCHAR}
                </if>
                <if test="filePath != null">
                    ,file_path = #{filePath,jdbcType=VARCHAR}
                </if>
                <if test="saveName != null">
                    ,save_name = #{saveName,jdbcType=VARCHAR}
                </if>
                <if test="originName != null">
                    ,origin_name = #{originName,jdbcType=VARCHAR}
                </if>
                <if test="createTime != null">
                    ,create_time = #{createTime,jdbcType=TIMESTAMP}
                </if>
        </trim>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByItemId" parameterType="com.github.rogerli.system.uploadfile.model.UploadFileModel">
        update r_upload_file
        <trim prefix="set" prefixOverrides=",">
            <if test="itemId != null">
                item_id = #{itemId,jdbcType=VARCHAR}
            </if>
        </trim>
        where id in
        <foreach item="item" index="index" collection="idList" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
    <update id="updateByKey" parameterType="com.github.rogerli.system.uploadfile.entity.UploadFile">
        update r_upload_file
        <trim prefix="set" prefixOverrides=",">
                ,item_id = #{itemId,jdbcType=VARCHAR}
                ,user_id = #{userId,jdbcType=VARCHAR}
                ,item_type = #{itemType,jdbcType=VARCHAR}
                ,title = #{title,jdbcType=VARCHAR}
                ,file_path = #{filePath,jdbcType=VARCHAR}
                ,save_name = #{saveName,jdbcType=VARCHAR}
                ,origin_name = #{originName,jdbcType=VARCHAR}
                ,create_time = #{createTime,jdbcType=TIMESTAMP}
        </trim>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <select id="findList" parameterType="com.github.rogerli.system.uploadfile.entity.UploadFile" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from r_upload_file
        <trim prefix="where" prefixOverrides="and|or">
            <if test="id != null">
                and id = #{id,jdbcType=VARCHAR}
            </if>
            <if test="itemId != null">
                and item_id = #{itemId,jdbcType=VARCHAR}
            </if>
            <if test="userId != null">
                and user_id = #{userId,jdbcType=VARCHAR}
            </if>
            <if test="itemType != null">
                and item_type = #{itemType,jdbcType=VARCHAR}
            </if>
            <if test="title != null">
                and title = #{title,jdbcType=VARCHAR}
            </if>
            <if test="filePath != null">
                and file_path = #{filePath,jdbcType=VARCHAR}
            </if>
            <if test="saveName != null">
                and save_name = #{saveName,jdbcType=VARCHAR}
            </if>
            <if test="originName != null">
                and origin_name = #{originName,jdbcType=VARCHAR}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
        </trim>
    </select>
</mapper>